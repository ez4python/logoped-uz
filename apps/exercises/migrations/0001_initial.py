# Generated by Django 5.2.1 on 2025-05-14 08:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Назначение',
                'verbose_name_plural': 'Назначения',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='courses/')),
                ('teaser_video', models.FileField(blank=True, null=True, upload_to='courses/videos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('repeat', 'Повторение за логопедом'), ('find_sound', 'Найди правильный звук'), ('build_word', 'Собери слово из слогов'), ('mark_sound', 'Отметь, где слышишь звук'), ('rhyme', 'Подбери рифму'), ('complete_word', 'Закончи слово'), ('name_picture', 'Назови, что на картинке'), ('stress', 'Укажи ударение'), ('tongue_twister', 'Скороговорка'), ('sound_picture', 'Связь звук-картинка')], max_length=20)),
                ('content', models.JSONField(default=dict)),
                ('audio', models.FileField(blank=True, null=True, upload_to='exercises/audio/')),
                ('video', models.FileField(blank=True, null=True, upload_to='exercises/video/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='exercises/images/')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Упражнение',
                'verbose_name_plural': 'Упражнения',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_answer', models.FileField(blank=True, null=True, upload_to='submissions/audio/')),
                ('video_answer', models.FileField(blank=True, null=True, upload_to='submissions/video/')),
                ('text_answer', models.TextField(blank=True)),
                ('file_answer', models.FileField(blank=True, null=True, upload_to='submissions/files/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_checked', models.BooleanField(default=False)),
                ('mark', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
        ),
    ]
